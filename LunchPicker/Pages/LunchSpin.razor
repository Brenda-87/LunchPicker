@page "/lunchspin"
@using LunchPicker.Models
@inject HttpClient Http

<PageTitle>Lunch Spin</PageTitle>

<div class="container">
    <h1>Waar eten we vandaag?</h1> 
    <button class="btn btn-primary" @onclick="GenerateRandomRestaurant">Zoek Lunchtent</button>

    <div class="mt-3">
        <h4 role="restaurant option 1">Optie 1</h4>
        <h4>@firstSelectedRestaurant?.Name</h4>
        <p>Cuisine: @firstSelectedRestaurant?.Cuisine</p>
        <p>Location: @firstSelectedRestaurant?.Location</p>
        <hr>
        <h4 role="restaurant option 2">Optie 2</h4>
        <h4>@secondSelectedRestaurant?.Name</h4>
        <p>Cuisine: @secondSelectedRestaurant?.Cuisine</p>
        <p>Location: @secondSelectedRestaurant?.Location</p>
        <hr>
        <h4 role="restaurant option 3">Optie 3</h4>
        <h4>@thirdSelectedRestaurant?.Name</h4>
        <p>Cuisine: @thirdSelectedRestaurant?.Cuisine</p>
        <p>Location: @thirdSelectedRestaurant?.Location</p>
    </div>
</div>


@code {
    private List<Restaurant>? restaurants;
    private Restaurant? firstSelectedRestaurant;
    private Restaurant? secondSelectedRestaurant;
    private Restaurant? thirdSelectedRestaurant;

    protected override async Task OnInitializedAsync()
    {
        restaurants = await Http.GetFromJsonAsync<List<Restaurant>>("sample-data/restaurants.json");
    }

    private void GenerateRandomRestaurant()
    {
        if (restaurants != null && restaurants.Count > 0)
        {
            var random = new Random();
            int index = random.Next(restaurants.Count);
            firstSelectedRestaurant = restaurants[index];
            
            List<Restaurant> firstFilteredRestaurants = restaurants.Where(r => r.Cuisine != firstSelectedRestaurant.Cuisine).ToList();
            index = random.Next(firstFilteredRestaurants.Count);
            secondSelectedRestaurant = firstFilteredRestaurants[index];

            List<Restaurant> secondFilteredRestaurants = firstFilteredRestaurants.Where(r => r.Cuisine != secondSelectedRestaurant.Cuisine).ToList();                        
            index = random.Next(secondFilteredRestaurants.Count);
            thirdSelectedRestaurant = secondFilteredRestaurants[index];
        }
    }
}
