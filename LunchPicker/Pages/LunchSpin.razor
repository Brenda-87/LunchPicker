@page "/lunchspin"
@using LunchPicker.Models
@inject RestaurantService RestaurantService

<PageTitle>Lunch Spin</PageTitle>

<div class="container text-center">
    <h1>Waar eten we vandaag?</h1> 
    <div class="container mt-5">
        <button class="btn btn-primary col-3" @onclick="GenerateRandomRestaurant">Zoek Lunchtent</button>
    </div>

</div>
    <div class="container">
        <div class="row">
            <div class="col align-self-end">
                <h4 role="restaurant option 1">Optie 1</h4>
                <h4>@firstSelectedRestaurant?.Name</h4>
                <p>Keuken: @firstSelectedRestaurant?.Cuisine</p>
                <p>Adres: @firstSelectedRestaurant?.Location</p>
                <p>Openingstijden maandag: @firstSelectedRestaurant?.OpeningHoursMonday donderdag: @firstSelectedRestaurant?.OpeningHoursThursday</p>
            </div>
                <hr>
        </div>

        <div class="row">
            <div class="col align-self-end">
                <h4 role="restaurant option 2">Optie 2</h4>
                <h4>@secondSelectedRestaurant?.Name</h4>
                <p>Cuisine: @secondSelectedRestaurant?.Cuisine</p>
                <p>Location: @secondSelectedRestaurant?.Location</p>
                <p>Openingstijden maandag: @firstSelectedRestaurant?.OpeningHoursMonday donderdag: @firstSelectedRestaurant?.OpeningHoursThursday</p>
                <hr>
            </div>
        </div>

        <div class="row">
            <div class="col align-self-end">
                <h4 role="restaurant option 3">Optie 3</h4>
                <h4>@thirdSelectedRestaurant?.Name</h4>
                <p>Cuisine: @thirdSelectedRestaurant?.Cuisine</p>
                <p>Location: @thirdSelectedRestaurant?.Location</p>
                <p>Openingstijden maandag: @firstSelectedRestaurant?.OpeningHoursMonday donderdag: @firstSelectedRestaurant?.OpeningHoursThursday</p>
            </div>
        </div>
    </div>


@code {
    private List<Restaurant>? restaurants;
    private Restaurant? firstSelectedRestaurant;
    private Restaurant? secondSelectedRestaurant;
    private Restaurant? thirdSelectedRestaurant;

    protected override async Task OnInitializedAsync()
    {
        restaurants = await RestaurantService.GetRestaurantsAsync();
    }

    private void GenerateRandomRestaurant()
    {
        if (restaurants != null && restaurants.Count > 0)
        {
            var random = new Random();
            int index = random.Next(restaurants.Count);
            firstSelectedRestaurant = restaurants[index];
            
            List<Restaurant> firstFilteredRestaurants = restaurants.Where(r => r.Cuisine != firstSelectedRestaurant.Cuisine).ToList();
            index = random.Next(firstFilteredRestaurants.Count);
            secondSelectedRestaurant = firstFilteredRestaurants[index];

            List<Restaurant> secondFilteredRestaurants = firstFilteredRestaurants.Where(r => r.Cuisine != secondSelectedRestaurant.Cuisine).ToList();                        
            index = random.Next(secondFilteredRestaurants.Count);
            thirdSelectedRestaurant = secondFilteredRestaurants[index];

            // 2. selecteer een random restaurant obv verschillend cuisine

            // maak zoekveld obv cuisine
        }
    }
}
